---
# flags to enable/disable steps
deploy: true
run_test: true
cleanup: true
admin: true
tenant_creation: true
user_creation: true
dump_results: true

validate_certs: null
floating_ip_timeout: 180

# Path for NFVbench results dump (step done if dump_results: true)
dump_path: /tmp/

# name of clouds.yaml ressource to use
cloud_detail: "nfvbench"

# Tenant information for creation or reuse
project_name: nfvbench
project_desc:
project_domain_name: default
username: nfvbench
password: Nfvbench-P@ssw0rd1
user_domain_name: default
# If user is created set accurate rights to use ('_member_' or 'admin')
role: _member_

# NFVbench generator VM Openstack certificate
cacert_file_name: ca.pem

# Openstack images to upload or reuse for NFVbench generator and loop VM
# Images location
images_path: './images/'
# Images details
loop_vm_image_name: 'nfvbenchvm-0.13'
loop_vm_image_filename: nfvbenchvm_centos-0.13.qcow2
generator_image_name: 'nfvbenchvm-generator-0.13'
generator_image_filename: nfvbenchvm_centos-generator-0.13.qcow2

# NFVbench scenario (e2e or loopback)
generator_scenario: e2e
# NFVbench test case (characterization, non-regression). See NFVbench source code (xtesting/testcases.yaml) for more information.
test_case: characterization

# NFVbench flavors for generator VM or loop VM (list is not exhaustive, add flavor(s) depending on compute nodes to test)
flavors:
  - flavor_name: flavor_nfvbench_sriov
    flavor_ram: 16384
    flavor_vcpus: 9
    flavor_disk: 24
    flavor_extra_specs:
      hw:numa_nodes: 1
      hw:cpu_policy: dedicated
      hw:cpu_thread_policy: isolate
      hw:emulator_threads_policy: share
      hw:mem_page_size: large
  - flavor_name: flavor_nfvbench_dpdk
    flavor_ram: 16384
    flavor_vcpus: 9
    flavor_disk: 24
    flavor_extra_specs:
      hw:numa_nodes: 1
      hw:cpu_policy: dedicated
      hw:emulator_threads_policy: share
      hw:mem_page_size: large

# Router name to create or reuse for management connectivity between external network and management network
router_name: router_nfvbench
external_network_name: external
security_group_name:

# Management network used by generator VM (and loop VM)
management_networks:
  - network_name: nfvbexternal_vn1
    physical_network: data1
    network_type: vlan
    segmentation_id:
    external: no
    # must be set to yes, otherwise management network usage will failed
    shared: yes
    # if ressource is shared with other projects or created previously by an admin, set cleanup to false
    cleanup: true

    subnet_name: subnet_nfvbenchexternal_vn1
    gateway: 192.168.90.1
    cidr: 192.168.90.0/24
    enable_dhcp: no
    no_gateway_ip: no

    port_name: nfvbench_mgmt_port
    vnic_type: normal
    security_groups: []
    port_security: no

# Generator networks (2 or 3 depending on network design choosen)
# topology values:
# - loopback_e2e (port is used for loopback and e2e (PVP NFVbench use case) tests)
# - loopback (port only used for loopback test traffic)
# - e2e (port only used for e2e (PVP NFVbench use case) test traffic)
generator_networks:
  - network_name: net_nfvbench_vn1
    physical_network: data2
    network_type: vlan
    segmentation_id:
    external: yes
    shared: yes
    # if ressource is shared with other projects or created previously by an admin, set cleanup to false
    cleanup: true

    topology: loopback_e2e

    subnet_name: subnet_nfvbench_vn1
    gateway:
    cidr: 192.168.91.0/24
    enable_dhcp: no
    no_gateway_ip: yes

    port_name: nfvbench_port_vf1
    vnic_type: direct
    security_groups: []
    port_security: no


  - network_name: net_nfvbench_vn1bis
    physical_network: data3
    network_type: vlan
    segmentation_id:
    external: yes
    shared: yes
    # if ressource is shared with other projects or created previously by an admin, set cleanup to false
    cleanup: true

    topology: loopback

    subnet_name: subnet_nfvbench_vn1bis
    gateway:
    cidr: 192.168.92.0/24
    enable_dhcp: no
    no_gateway_ip: yes

    port_name: nfvbench_port_vf1bis
    vnic_type: direct
    security_groups: []
    port_security: no

  - network_name: net_nfvbench_vn2
    physical_network: data3
    network_type: vlan
    segmentation_id:
    external: yes
    shared: yes
    # if ressource is shared with other projects or created previously by an admin, set cleanup to false
    cleanup: true

    topology: e2e

    subnet_name: subnet_nfvbench_vn2
    gateway:
    cidr: 192.168.93.0/24
    enable_dhcp: no
    no_gateway_ip: yes

    port_name: nfvbench_port_vf2
    vnic_type: direct
    security_groups: []
    port_security: no

# Loop VM networks
# Loop VM can used same networks as generator (if topology has a value of loopback_e2e or e2e)
# or loop VM can used other networks than generator (i.e. not shared networks)
# In this case set accurate list of networks using same frame as generator_networks
loop_vm_networks: "{{ generator_networks }}"

# NFVbench generator VM information
generator_vm:
  - server_name: nfvbench_generator
    flavor_name: flavor_nfvbench_sriov
    image_name: '{{ generator_image_name }}'
    zone_name:
    security_groups: []
    # create new key pair or reuse one if existing (private key must be present in ansible path)
    keypair_name: nfvbkey

# NFVbench config part, override NFVbench default configuration (see NFVbench code for more information)
nfvbench_config:
  traffic_generator:
    # IP addresses and UDP ports of the generated traffic (permit to reach 1 million flows per port)
    ip_addrs: ['198.18.0.0/16', '198.19.0.0/16']
    udp_src_port: ['49152', '49168']
    udp_dst_port: ['49152', '49168']
    
    tg_gateway_ip_addrs: ['192.168.40.100', '192.168.41.100']
    gateway_ip_addrs: ['192.168.40.254', '192.168.41.254']

    generator_profile:
      - name: trex-local
        tool: TRex
        ip: 127.0.0.1
        zmq_pub_port: 4500
        zmq_rpc_port: 4501
        software_mode: false
  user_label:
  service_chain: PVP
  vm_forwarder: 'vpp'
  num_mbufs: 128000
  service_chain_shared_net: 'true'
  vlan_tagging: 'false'
  vm_image_file: '[[ loop_vm_image_name ]].qcow2'
  loop_vm_name: nfvbench-loop-vm
  availability_zone: 'nova'
  hypervisor_hostname: 'localdomain'
  no_cleanup: true
  flavor_type: 'flavor_nfvbench_dpdk'
  fluentd:
    logging_tag:
    result_tag:
    ip:
    port:
