---
# Copyright (c) 2021 Orange
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
- name: Check if clouds.yaml file exists
  stat:
    path: "clouds.yaml"
  register: clouds_result
  no_log: true

- name: Extract clouds.yaml vars
  set_fact:
    cloud_data: "{{ lookup('file', 'clouds.yaml') | from_yaml  }}"
  no_log: true

- name: Get NFVbench project info from openstack API
  openstack.cloud.project_info:
    cloud: "{{ cloud_detail }}"
    name: "{{ project_name }}"
  register: openstack_project_info
  when:
    - admin | bool
    - not deploy | bool
    - project_id is not defined

- name: Extract NFVbench project id from openstack API
  set_fact:
    project_id: "{{ openstack_project_info.openstack_projects[0].id }}"
  when:
    - admin | bool
    - not deploy | bool
    - project_id is not defined
    - openstack_project_info.openstack_projects | length > 0

- name: Extract NFvbench project_id from clouds.yaml
  set_fact:
    project_id: "{{ cloud_data.clouds[cloud_detail].auth.project_id }}"
  when:
    - not admin | bool
    - project_id is not defined

- name: Fail if the NFVbench project ID cannot be found
  # At that point, we should have a project_id for the NFVbench project (the
  # NFVbench project is the OpenStack project whose name can be found in the
  # project_name Ansible variable).  Unless we are only doing a cleanup, this is
  # abnormal, so we stop with a clear error message.
  ansible.builtin.fail:
    msg: >
      No project ID could be found for the {{ project_name }} OpenStack project.
      It you are running the ansible-role-nfvbench role as a non-admin
      OpenStack user, you should make sure that the project has been pre-created
      by an OpenStack administrator.
  when:
    - deploy | bool or run_test | bool
    - project_id is not defined

- name: Set openstack variables as Ansible facts from clouds.yaml file
  set_fact:
    OS_AUTH_URL: "{{ cloud_data.clouds[cloud_detail].auth.auth_url }}"
    OS_PROJECT_ID: "{{ project_id }}"
    OS_PROJECT_NAME: "{{ project_name }}"
    OS_USER_DOMAIN_NAME: "{{ user_domain_name }}"
    OS_USERNAME: "{{ username }}"
    OS_PASSWORD: "{{ password }}"
    OS_REGION_NAME: "{{ cloud_data.clouds[cloud_detail].region_name }}"
    OS_PROJECT_DOMAIN_NAME: "{{ project_domain_name }}"
  no_log: true
  when: project_id is defined

- name: Generate clouds.yaml file for NFVbench user in NFVbench generator VM
  template:
    src: clouds-nfvbench.yaml.j2
    dest: clouds-nfvbench.yaml
    mode: '0644'
  no_log: true
  when: deploy | bool

- name: Set OS_CACERT Ansible variable
  set_fact:
    OS_CACERT: "{{ cloud_data.clouds[cloud_detail].cacert }}"
  ignore_errors: true
  no_log: true
  when: project_id is defined

- name: Generate clouds-user.yaml file for NFVbench user
  # This one is for use by ansible-role-nfvbench when operating as a non-admin
  # OpenStack user
  template:
    src: clouds.yaml.j2
    dest: clouds-user.yaml
    mode: '0644'
  no_log: true
  when: project_id is defined
