---
# Copyright (c) 2021 Orange
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
- name: Override nfvbench configuration
  copy:
    src: e2e.cfg
    dest: /etc/nfvbench/e2e.cfg
    mode: 0644
  delegate_to: generator
  become: true
  when:
    - nfvbench_vm is defined
    - not nfvbench_vm is changed

- name: Reload nfvbench configuration
  command: /nfvbench/configure-nfvbench.sh
  delegate_to: generator
  become: true
  when:
    - nfvbench_vm is defined
    - not nfvbench_vm is changed

- name: Start nfvbench with accurate configuration
  command: /nfvbench/start-nfvbench.sh {{ generator_scenario }}
  delegate_to: generator
  become: true
  register: nfvbench_start
  changed_when: '"NFVbench running in screen" in nfvbench_start.stdout'

- name: Init NFVbench environment variables for behave test scenario
  set_fact:
    NFVBENCH_ENV: "{{ NFVBENCH_ENV | default({}) }}"

- name: Set NFVbench environment variables for behave test scenario
  set_fact:
    NFVBENCH_ENV: "{{ NFVBENCH_ENV | combine({item: lookup('env', item)}) }}"
  with_items: "{{ ansible_env }}"
  when:
    - item is match("NFVB.*")
    - lookup('env', item)

- name: Run tests
  block:
    - name: "Run NFVbench Xtesting test case: {{ test_case }}"
      command: run_tests -t {{ test_case }} -p -r
      environment:
        - S3_ENDPOINT_URL: "{{ lookup('env', 'S3_ENDPOINT_URL') }}"
        - S3_DST_URL: "{{ lookup('env', 'S3_DST_URL') }}"
        - HTTP_DST_URL: "{{ lookup('env', 'HTTP_DST_URL') }}"
        - AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        - AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        - TEST_DB_URL: "{{ lookup('env', 'TEST_DB_URL') }}"
        - TEST_DB_EXT_URL: "{{ lookup('env', 'TEST_DB_EXT_URL') }}"
        - NODE_NAME: "{{ lookup('env', 'NODE_NAME') }}"
        - PROJECT_NAME: "{{ lookup('env', 'PROJECT_NAME') }}"
        - INSTALLER_TYPE: "{{ lookup('env', 'INSTALLER_TYPE') }}"
        - DEPLOY_SCENARIO: "{{ lookup('env', 'DEPLOY_SCENARIO') }}"
        - BUILD_TAG: "{{ lookup('env', 'BUILD_TAG') }}"
        - "{{ NFVBENCH_ENV }}"
      register: result
      failed_when: >
        (result.rc != 0) or
        ('TrafficClientException' in result.stdout) or
        ('Traceback' in result.stdout)
      delegate_to: generator
      become: true
      changed_when: false
      no_log: false

  always:
    - name: Set test results archive file name
      set_fact:
        test_results_archive: results-{{ lookup('env', 'BUILD_TAG') | regex_replace("[^-A-Za-z0-9]", "_") }}.tar.gz
        # Remark: we use the BUILD_TAG to name the test results archive file,
        # but we must remove special characters, especially the slash / that
        # would prevent the creation of the archive file.  We substitute those
        # characters with an underscore _.

    - name: Compress results
      community.general.archive:
        path: /var/lib/xtesting/results
        dest: /tmp/{{ test_results_archive }}
        format: gz
        mode: 0644
      delegate_to: generator
      become: true
      no_log: true
      when:
        - dump_results

    - name: Dump results archive
      fetch:
        src: /tmp/{{ test_results_archive }}
        dest: "{{ dump_path }}"
        flat: yes
      delegate_to: generator
      become: true
      no_log: true
      when:
        - dump_results
